services:
  db:
    image: postgres:latest
    container_name: transcendence-postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - ft_transcendence
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"] #ou verifier si le port est ouvert
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: transcendence-backend
    command: gunicorn my_website.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ft_transcendence

  nginx:
    image: nginx:latest
    container_name: transcendence-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/static:/static
      - ./backend/media:/media
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_started
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:

networks:
  ft_transcendence:
    name: ft_transcendence
