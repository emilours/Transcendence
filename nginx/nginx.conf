events {
	worker_connections  1024;
}

#keep requests details in logs
http {
	include			/etc/nginx/mime.types;
	default_type	application/octet-stream;
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
					'$status $body_bytes_sent "$http_referer" '
					'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;
	error_log /var/log/nginx/error.log warn;

	upstream mywebsite {
		server mywebsite:8000;
	}

	server {
		listen 8080 ssl;
		server_name localhost;

		ssl_certificate /etc/nginx/ssl/nginx.crt;
		ssl_certificate_key /etc/nginx/ssl/nginx.key;
		ssl_protocols TLSv1.2 TLSv1.3;
		# ssl_prefer_server_ciphers on;

		location / {
			proxy_pass http://mywebsite;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			proxy_buffering off;
			proxy_cache off;

			proxy_read_timeout 3600s;
			proxy_send_timeout 3600s;
			keepalive_timeout 3600s;
			send_timeout 3600s;
		}

		location /static/ {
			alias /staticfiles/;
			autoindex on;
			try_files $uri $uri/ =404;
			access_log on;
		}

		location /media/ {
			alias /media/;
			autoindex on;
			try_files $uri $uri/ =404;
			access_log on;
		}

<<<<<<<<< Temporary merge branch 1

		error_page 404 /404.html;
		location = /404.html {
			internal;
		}
=========
		client_max_body_size 10M;
		# error_page 404 /404.html;
		# location = /404.html {
		# 	internal;
		# }
>>>>>>>>> Temporary merge branch 2
	}
}
